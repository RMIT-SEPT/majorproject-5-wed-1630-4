version: 2
jobs:
buildingTheFrontEnd:
    docker:
      - image: circleci/node:12.9.1-browsers
  
    working_directory: ~/repo/FrontEnd
steps:
      - checkout:
        path: ~/repo
      
      - restore_cache:
        keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      
      - run: yarn install
   
      - save_cache:
        paths:
          - node_modules
          - ~/.npm 
          - ~/.cache
        key: v1-dependencies-{{ checksum "package.json" }}
    
      - run: yarn test


version: 2
jobs:
  buildingTheBackEnd:

    working_directory: ~/repo/BackEnd

    docker:
      - image: circleci/openjdk:11-jdk-stretc
      environment:
        POSTGRES_PORT: '5432'
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: sept_project
        DATABASE_URL: jdbc:postgresql://localhost:5432/sept_project
        
      - image: circleci/postgres:9.6.3-alpine
    
    steps:
      - checkout:
        path: ~/repo

      - run: apt-get update -qq && apt-get install -y postgresql
      - run:
          command: |
            psql -h 127.0.0.1 -U postgres -c "CREATE DATABASE sept_project;"
            psql -h 127.0.0.1 -U postgres -c "CREATE USER username WITH PASSWORD 'postgres'; GRANT ALL PRIVILEGES ON DATABASE databasename TO username;"

      - replaceCache:
        key: buildingTheBackEnd-{{checksum "pom.xml"}}
      
      - run: mvn dependency:go-offline

      - saveCache:
          paths:
            - ~/.m2
          key: buildingTheBackEnd-{{checksum "pom.xml"}}

      - run: mvn test
      - run: mvn package


workflows:
  version: 2

  buildBack&FrontEnd:
    jobs: 
      - buildingTheFrontEnd
      - buildingTheBackEnd
